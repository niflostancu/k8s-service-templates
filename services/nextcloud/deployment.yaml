apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  labels:
    app.kubernetes.io/name: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nextcloud
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nextcloud
    spec:
      containers:
      - name: "nextcloud"
        image: "nextcloud:apache"
        imagePullPolicy: "Always"
        env:
        - {name: "POSTGRES_HOST", value: "postgres" }
        - {name: "POSTGRES_PORT", value: "5432" }
        - {name: "POSTGRES_DB", value: "nextcloud" }
        - {name: "REDIS_HOST", value: "redis" }
        - {name: "REDIS_HOST_PORT", value: "6379" }
        - {name: "NEXTCLOUD_INIT_HTACCESS", value: "1"}
        # set to k8s CIDR range (to use the reverse proxy's client data)
        # - {name: "TRUSTED_PROXIES", value: "10.42.0.0/16 10.43.0.0/16" }
        # - {name: "NEXTCLOUD_TRUSTED_DOMAINS", value: "cloud.example.com 10.42.* 10.43.*" }
        envFrom:
        - secretRef:
            name: nextcloud-db-env
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        startupProbe:
          httpGet:
            path: /status.php
            port: http
          failureThreshold: 60
          periodSeconds: 10  # max. 10 minutes for upgrading
        livenessProbe:
          httpGet:
            path: /status.php
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /status.php
            port: http
          initialDelaySeconds: 30
          periodSeconds: 20
        volumeMounts:
        - mountPath: /var/www/html
          name: nextcloud-data
      volumes:
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: nextcloud-data

